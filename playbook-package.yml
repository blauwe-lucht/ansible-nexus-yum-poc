---
# Normally you would use a proper build system like make or maven to build and upload your package,
# but since we've already got Ansible installed, let's use that. :)
# "If the only tool you have is a hammer, it is tempting to treat everything as if it were a nail." - Abraham Maslow

- name: Create and upload yum package
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    version: "0.1"
    nexus_user: upload-yum
    nexus_password: Abcd1234!
    nexus_server: 192.168.14.34
    gpg_home: /home/vagrant
    gpg_generator_user: vagrant
  tasks:
    - name: Install required packages
      ansible.builtin.yum:
        name:
          - rpm-build
          - createrepo
          - rpmlint
          - gnupg
        state: present
      become: true
      tags: install

    - name: Ensure .gnupg config directory exists with right permissions
      ansible.builtin.file:
        dest: "{{ gpg_home }}/.gnupg"
        state: directory
        mode: "0700"
        owner: "{{ gpg_generator_user }}"
      tags: gpg

    - name: Check gpg keys
      ansible.builtin.command:
        cmd: gpg --list-secret-keys
      register: gpg_result
      changed_when: false
      tags: gpg

    - name: Generate gpg key
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: >
          gpg --full-gen-key --batch <(echo "Key-Type: 1";
            echo "Key-Length: 4096";
            echo "Subkey-Type: 1";
            echo "Subkey-Length: 4096";
            echo "Expire-Date: 0";
            echo "Name-Real: Ansible";
            echo "Name-Email: ansible@example.com";
            echo "%no-protection"; )
      register: gpg_result
      changed_when: true
      when: "'Ansible <ansible@example.com>' not in gpg_result.stdout"
      tags: gpg

    - name: Export public key # noqa: no-handler
      ansible.builtin.shell:
        cmd: gpg --export --armor ansible > {{ gpg_home }}/.gnupg/ansible.pub
      changed_when: true
      register: gpg_result
      when: gpg_result.changed

    - name: Import public key into rpm
      ansible.builtin.rpm_key:
        key: "{{ gpg_home }}/.gnupg/ansible.pub"
      become: true

    - name: Create .rpmmacros
      ansible.builtin.copy:
        dest: ~/.rpmmacros
        content: |
          %_signature gpg
          %_gpg_path {{ gpg_home }}/.gnupg
          %_gpg_name Ansible
          %_gpg /usr/bin/gpg
        mode: "0644"

    - name: Make directory for package
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "0755"
        state: directory
      loop:
        - ~/rpmbuild
        - ~/rpmbuild/BUILD
        - ~/rpmbuild/RPMS
        - ~/rpmbuild/SOURCES
        - ~/rpmbuild/SPECS
        - ~/rpmbuild/SRPMS
        - ~/rpmbuild-src
        - ~/rpmbuild-src/poc-package-{{ version }}

    - name: Create source files
      ansible.builtin.copy:
        dest: ~/rpmbuild-src/poc-package-{{ version }}/{{ item.filename }}
        content: "{{ item.content }}"
        mode: "0644"
      loop:
        - filename: hello.txt
          content: hello {{ version }}
        - filename: world.txt
          content: world {{ version }}

    - name: Create tar.gz file from sources
      community.general.archive:
        path: ~/rpmbuild-src/poc-package-{{ version }}
        dest: ~/rpmbuild/SOURCES/poc-package-{{ version }}.tar.gz
        mode: "0644"

    - name: Generate the spec file
      ansible.builtin.template:
        src: rpmbuild/SPECS/poc-package.spec.j2
        dest: ~/rpmbuild/SPECS/poc-package.spec
        mode: "0644"

    - name: Lint the spec file
      ansible.builtin.command:
        cmd: rpmlint ~/rpmbuild/SPECS/poc-package.spec
      changed_when: false

    - name: Run rpmbuild
      ansible.builtin.command:
        cmd: rpmbuild -ba poc-package.spec
        chdir: ~/rpmbuild/SPECS
      changed_when: true
      tags: rpmbuild

    - name: Sign the rpm # noqa: command-instead-of-module
      ansible.builtin.command:
        cmd: rpm --addsign /home/vagrant/rpmbuild/RPMS/x86_64/poc-package-{{ version }}-1.el8.x86_64.rpm
      changed_when: true
      tags: rpmbuild

    - name: Upload to nexus  # noqa command-instead-of-module : couldn't get this to work with uri
      ansible.builtin.command:
        cmd: >
          curl -v -u {{ nexus_user }}:{{ nexus_password }}
          --upload-file /home/vagrant/rpmbuild/RPMS/x86_64/poc-package-{{ version }}-1.el8.x86_64.rpm
          http://{{ nexus_server }}:8081/repository/yum/poc-package-{{ version }}-1.el8.x86_64.rpm
      changed_when: true
      no_log: true
      tags: upload
